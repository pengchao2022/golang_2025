package main

import "fmt"

// 全局作用域举例
// 该 foo函数为全局作用域函数
func foo() {
	fmt.Println("this is a test ...")
}

// 全局变量 存储在静态区域，只有整个程序执行完才可以被释放掉，而局部变量是动态的，函数执行完就可以释放。
var a = 200 //a 为全局变量 注意 a := 200 这种方式仅限于声明 局部变量，不可以声明 全局变量
var b = 100 // 在go 语言中声明了变量没有使用会报错，但是这个仅限于局部变量，如果是全局变量声明了没有使用，则不会报错

func main() {
	foo()
	a := 400
	fmt.Println(a)
	/* a 的值为 400， 采用局部优先 原则，优先从 自己的局部找 然后去 全局找 ，如果全局找不到，则会报错未声明 ，
	   注意： 函数的空间是独立的，不会去其他定义函数里面找该变量
	*/

}

//在mian函数体外定义的变量 为全局变量， 作用域为全局
